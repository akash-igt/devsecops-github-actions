name: Secure CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          export PYTHONPATH=$PWD
          pytest --verbose

  sonar_scan:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=devsecops-python
            -Dsonar.organization=devsecops-python
            -Dsonar.sources=.
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  security_scan:
    name: Security Scanning with Trivy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Trivy Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "your-docker-image:latest"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true

  docker_build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [build, sonar_scan, security_scan]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASS }}

      - name: Build Docker Image
        run: |
          docker build -t akashigt/devsecops-python:latest .

      - name: Push Docker Image
        run: |
          docker push akashigt/devsecops-python:latest
